/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type WorkPage = {
  _id: string;
  _type: "workPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  orderRank?: string;
  name?: string;
  slug?: Slug;
  workPageMainGallery?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "imageAssets";
  }>;
  workPageServiceCategory?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "serviceCategory";
  };
  workPageLayout?: Array<{
    _key: string;
  } & WorkLayout>;
};

export type WorkLayout = {
  _type: "workLayout";
  workLayoutTitle?: string;
  workLayoutSubtitle?: string;
  workLayoutContent?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  workLayoutGallery?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "imageAssets";
  }>;
};

export type Work = {
  _id: string;
  _type: "work";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heroSubtitle?: string;
  heroImage?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "imageAssets";
  };
  ctaButtonTxt?: string;
  workPages?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "workPage";
  }>;
};

export type Services = {
  _id: string;
  _type: "services";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  servicesHeroSubtitle?: string;
  servicesHeroImage?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "imageAssets";
  };
  servicesCtaButtonTxt?: string;
  servicesServiceList?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "serviceCategory";
  }>;
};

export type ServiceCategoryList = {
  _type: "serviceCategoryList";
  serviceCatergoryListTitle?: string;
  serviceCatergoryListTags?: Array<string>;
  serviceCatergoryListDescriptions?: Array<string>;
};

export type ServiceCategory = {
  _id: string;
  _type: "serviceCategory";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  serviceCatergoryTitle?: string;
  serviceCatergoryId?: Slug;
  serviceCategoryDescription?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  serviceCategoryImage?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "imageAssets";
  };
  serviceCategories?: Array<{
    _key: string;
  } & ServiceCategoryList>;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type Home = {
  _id: string;
  _type: "home";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heroTitle?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  heroImage?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "imageAssets";
  };
  heroCTAButtonTxt?: string;
  workGallery?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "workPage";
  }>;
  workCTAButtonTxt?: string;
  serviceCTAButtonTxt?: string;
  serviceHomeCategories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "serviceCategory";
  }>;
  aboutSubtitle?: string;
  aboutContent?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  aboutGithub?: string;
  aboutLinkedIn?: string;
  meetGlacierSubtitle?: string;
  meetGlacierContent?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  meetGlacierButtonCTA?: string;
  glacierGallery?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "imageAssets";
  }>;
};

export type Footer = {
  _id: string;
  _type: "footer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  phoneNumber?: string;
  emailLink?: string;
};

export type Contact = {
  _id: string;
  _type: "contact";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  contactHeroSubtitle?: string;
  contactHeroImage?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "imageAssets";
  };
  contactSectionTitle?: string;
  contactSectionSubtitle?: string;
  contactSectionImage?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "imageAssets";
  };
};

export type ImageAssets = {
  _id: string;
  _type: "imageAssets";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | WorkPage | WorkLayout | Work | Services | ServiceCategoryList | ServiceCategory | Slug | Home | Footer | Contact | ImageAssets | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./queries/contactQuerries.ts
// Variable: CONTACT_QUERY
// Query: *[_type == "contact"][0]{  contactHeroSubtitle,  contactHeroImage->{    "imageUrl": image.asset->url,    "imageName": name,  },  contactSectionTitle,  contactSectionSubtitle,  contactSectionImage->{    "imageUrl": image.asset->url,    "imageName": name,  },}
export type CONTACT_QUERYResult = {
  contactHeroSubtitle: string | null;
  contactHeroImage: {
    imageUrl: string | null;
    imageName: string | null;
  } | null;
  contactSectionTitle: string | null;
  contactSectionSubtitle: string | null;
  contactSectionImage: {
    imageUrl: string | null;
    imageName: string | null;
  } | null;
} | null;

// Source: ./queries/footerQueries.ts
// Variable: FOOTER_QUERY
// Query: *[_type == "footer"][0]{  phoneNumber,  emailLink,}
export type FOOTER_QUERYResult = {
  phoneNumber: string | null;
  emailLink: string | null;
} | null;

// Source: ./queries/homeQueries.ts
// Variable: HOME_QUERY
// Query: *[_type == "home"][0]{    heroTitle,    heroImage->{      "imageUrl": image.asset->url,      "imageName": name,    },    heroCTAButtonTxt,    workGallery[]->{      name,      slug,      workPageLayout[0]{        workLayoutGallery[0]->{          "imageUrl": image.asset->url,          "imageName": name,        }      },    },    workCTAButtonTxt,    serviceCTAButtonTxt,    serviceHomeCategories[]->{      serviceCatergoryTitle,      serviceCategoryDescription    },    aboutImage->{      "aboutImageUrl": image.asset->url,      "aboutImageName": name,    },    aboutSubtitle,    aboutContent,    aboutGithub,    aboutLinkedIn,    meetGlacierSubtitle,    meetGlacierContent,    meetGlacierButtonCTA,    glacierGallery[]->{      "imageUrl": image.asset->url,      "imageName": name,    },  }
export type HOME_QUERYResult = {
  heroTitle: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  heroImage: {
    imageUrl: string | null;
    imageName: string | null;
  } | null;
  heroCTAButtonTxt: string | null;
  workGallery: Array<{
    name: string | null;
    slug: Slug | null;
    workPageLayout: {
      workLayoutGallery: {
        imageUrl: string | null;
        imageName: string | null;
      } | null;
    } | null;
  }> | null;
  workCTAButtonTxt: string | null;
  serviceCTAButtonTxt: string | null;
  serviceHomeCategories: Array<{
    serviceCatergoryTitle: string | null;
    serviceCategoryDescription: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
  }> | null;
  aboutImage: null;
  aboutSubtitle: string | null;
  aboutContent: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  aboutGithub: string | null;
  aboutLinkedIn: string | null;
  meetGlacierSubtitle: string | null;
  meetGlacierContent: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  meetGlacierButtonCTA: string | null;
  glacierGallery: Array<{
    imageUrl: string | null;
    imageName: string | null;
  }> | null;
} | null;

// Source: ./queries/servicesQueries.ts
// Variable: SERVICES_QUERY
// Query: *[_type == "services"][0]{    servicesHeroSubtitle,    servicesHeroImage->{      "imageUrl": image.asset->url,      "imageName": name,    },    servicesCtaButtonTxt,    servicesServiceList[]->{      serviceCatergoryTitle,      serviceCatergoryId,      serviceCategoryImage->{        "imageUrl": image.asset->url,        "imageName": name,      },      serviceCategories[]{        serviceCatergoryListTitle,        serviceCatergoryListTags,        serviceCatergoryListDescriptions      }    }  }
export type SERVICES_QUERYResult = {
  servicesHeroSubtitle: string | null;
  servicesHeroImage: {
    imageUrl: string | null;
    imageName: string | null;
  } | null;
  servicesCtaButtonTxt: string | null;
  servicesServiceList: Array<{
    serviceCatergoryTitle: string | null;
    serviceCatergoryId: Slug | null;
    serviceCategoryImage: {
      imageUrl: string | null;
      imageName: string | null;
    } | null;
    serviceCategories: Array<{
      serviceCatergoryListTitle: string | null;
      serviceCatergoryListTags: Array<string> | null;
      serviceCatergoryListDescriptions: Array<string> | null;
    }> | null;
  }> | null;
} | null;

// Source: ./queries/workQueries.ts
// Variable: WORK_QUERY
// Query: *[_type == "work"][0]{    heroSubtitle,    heroImage->{      "imageUrl": image.asset->url,      "imageName": name,    },    ctaButtonTxt,    workPages[]->{      name,      slug,      workPageMainGallery[]->{        "imageUrl": image.asset->url,        "imageName": name,      },      workPageServiceCategory->{        serviceCatergoryId      },      workPageLayout[0]{        workLayoutContent,      }    }  }
export type WORK_QUERYResult = {
  heroSubtitle: string | null;
  heroImage: {
    imageUrl: string | null;
    imageName: string | null;
  } | null;
  ctaButtonTxt: string | null;
  workPages: Array<{
    name: string | null;
    slug: Slug | null;
    workPageMainGallery: Array<{
      imageUrl: string | null;
      imageName: string | null;
    }> | null;
    workPageServiceCategory: {
      serviceCatergoryId: Slug | null;
    } | null;
    workPageLayout: {
      workLayoutContent: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    } | null;
  }> | null;
} | null;
// Variable: WORK_PAGE_QUERY
// Query: *[_type == "workPage" && slug.current == $slug][0]{    name,    secondaryTitle,    workPageMainGallery[0]->{      "imageUrl": image.asset->url,      "imageName": name,    },    workPageLayout[]{      workLayoutTitle,      workLayoutSubtitle,      workLayoutContent,      workLayoutGallery[]->{        "imageUrl": image.asset->url,        "imageName": name,      }    }  }
export type WORK_PAGE_QUERYResult = {
  name: string | null;
  secondaryTitle: null;
  workPageMainGallery: {
    imageUrl: string | null;
    imageName: string | null;
  } | null;
  workPageLayout: Array<{
    workLayoutTitle: string | null;
    workLayoutSubtitle: string | null;
    workLayoutContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    workLayoutGallery: Array<{
      imageUrl: string | null;
      imageName: string | null;
    }> | null;
  }> | null;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "\n*[_type == \"contact\"][0]{\n  contactHeroSubtitle,\n  contactHeroImage->{\n    \"imageUrl\": image.asset->url,\n    \"imageName\": name,\n  },\n  contactSectionTitle,\n  contactSectionSubtitle,\n  contactSectionImage->{\n    \"imageUrl\": image.asset->url,\n    \"imageName\": name,\n  },\n}\n": CONTACT_QUERYResult;
    "\n*[_type == \"footer\"][0]{\n  phoneNumber,\n  emailLink,\n}\n": FOOTER_QUERYResult;
    "\n  *[_type == \"home\"][0]{\n    heroTitle,\n    heroImage->{\n      \"imageUrl\": image.asset->url,\n      \"imageName\": name,\n    },\n    heroCTAButtonTxt,\n    workGallery[]->{\n      name,\n      slug,\n      workPageLayout[0]{\n        workLayoutGallery[0]->{\n          \"imageUrl\": image.asset->url,\n          \"imageName\": name,\n        }\n      },\n    },\n    workCTAButtonTxt,\n    serviceCTAButtonTxt,\n    serviceHomeCategories[]->{\n      serviceCatergoryTitle,\n      serviceCategoryDescription\n    },\n    aboutImage->{\n      \"aboutImageUrl\": image.asset->url,\n      \"aboutImageName\": name,\n    },\n    aboutSubtitle,\n    aboutContent,\n    aboutGithub,\n    aboutLinkedIn,\n    meetGlacierSubtitle,\n    meetGlacierContent,\n    meetGlacierButtonCTA,\n    glacierGallery[]->{\n      \"imageUrl\": image.asset->url,\n      \"imageName\": name,\n    },\n  }\n": HOME_QUERYResult;
    "\n  *[_type == \"services\"][0]{\n    servicesHeroSubtitle,\n    servicesHeroImage->{\n      \"imageUrl\": image.asset->url,\n      \"imageName\": name,\n    },\n    servicesCtaButtonTxt,\n    servicesServiceList[]->{\n      serviceCatergoryTitle,\n      serviceCatergoryId,\n      serviceCategoryImage->{\n        \"imageUrl\": image.asset->url,\n        \"imageName\": name,\n      },\n      serviceCategories[]{\n        serviceCatergoryListTitle,\n        serviceCatergoryListTags,\n        serviceCatergoryListDescriptions\n      }\n    }\n  }\n": SERVICES_QUERYResult;
    "\n  *[_type == \"work\"][0]{\n    heroSubtitle,\n    heroImage->{\n      \"imageUrl\": image.asset->url,\n      \"imageName\": name,\n    },\n    ctaButtonTxt,\n    workPages[]->{\n      name,\n      slug,\n      workPageMainGallery[]->{\n        \"imageUrl\": image.asset->url,\n        \"imageName\": name,\n      },\n      workPageServiceCategory->{\n        serviceCatergoryId\n      },\n      workPageLayout[0]{\n        workLayoutContent,\n      }\n    }\n  }\n": WORK_QUERYResult;
    "\n  *[_type == \"workPage\" && slug.current == $slug][0]{\n    name,\n    secondaryTitle,\n    workPageMainGallery[0]->{\n      \"imageUrl\": image.asset->url,\n      \"imageName\": name,\n    },\n    workPageLayout[]{\n      workLayoutTitle,\n      workLayoutSubtitle,\n      workLayoutContent,\n      workLayoutGallery[]->{\n        \"imageUrl\": image.asset->url,\n        \"imageName\": name,\n      }\n    }\n  }\n": WORK_PAGE_QUERYResult;
  }
}
